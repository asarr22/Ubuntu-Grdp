name: Ubuntu-Grdp
on: 
  workflow_dispatch:
   inputs:
     auth:
        description: 'GRDP Authorization Code'
        required: true
  
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-20.04
    
    env:
      # Change These If You Are Forking The Repo
      GitHubMail: "msarr3334@gmail.com"      
      GitHubName: "asarr22"
      
    steps:
    - name: Creating User to Login
      run: |
         sudo useradd -m Batu33TR && sudo adduser Batu33TR sudo && echo 'Batu33TR:Batu33TR' | sudo chpasswd

    - name: Rename VM Hostname
      run: |
         sudo hostname MicrosoftAzure

      # To Install different Environment replace their commands. by default it Install 'Ubuntu'
      
      # Ubuntu default will take upto 6-7 min
      # sudo apt update && sudo apt install ubuntu-desktop
      
      # For UKUI (Awesome UI) (4-5 min)
      # sudo add-apt-repository ppa:ubuntukylin-members/ukui -y && sudo apt update && sudo apt install ukui-desktop-environment
      
      # For LXDE (4 min)
      # sudo apt update && sudo apt install lxqt sddm -y
      
      # For Mate (5 min)
      # sudo apt update && sudo apt install ubuntu-mate-desktop -y
      
      # For Budgie (8 min)
      # sudo apt update && sudo apt install ubuntu-budgie-desktop -y
      
      # For KDE Plasma (10 min)
      # sudo apt update && sudo apt install tasksel && sudo tasksel install kubuntu-desktop
      
      # For Deepin (3-4 min)
      # sudo apt update && sudo add-apt-repository ppa:ubuntudde-dev/stable -y && sudo apt install ubuntudde-dde -y && sudo apt install ubuntudde-dde-extras -y
      
      # For XFCE (2-3 min) Lite weight
      # sudo apt update && sudo apt install xfce4 && sudo chmod 777 /home/Area69Lab/
      # sudo bash -c 'echo "exec /etc/X11/Xsession /usr/bin/xfce4-session" > /etc/chrome-remote-desktop-session'

    - name: Installing Desktop Environment (wait for 5 min)
      run: sudo apt update && sudo add-apt-repository ppa:ubuntudde-dev/stable -y && sudo apt install ubuntudde-dde -y && sudo apt install ubuntudde-dde-extras -y

    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Clean VM

    - name: Install Android Building Packages
      run: curl -fsSL "https://raw.githubusercontent.com/ProjectMedusaAndroid/KernelEnvironments/ARM64/android_build_env.sh" | bash

    - name: Installing Google Chrome Headless
      run: |
           sudo apt update
           sudo apt-get install xbase-clients python3-psutil xvfb -y
           wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
           sudo dpkg --install google-chrome-stable_current_amd64.deb
           sudo apt install --assume-yes --fix-broken

    - name: Installing Some Configurations
      run: |
           sudo apt install nautilus expect nano -y
           sudo apt install --assume-yes xscreensaver

    - name: Installing Grdp
      run: |
           sudo apt-get update
           sudo apt-get install xbase-clients python3-psutil -y
           wget https://dl.google.com/linux/direct/chrome-remote-desktop_current_amd64.deb
           sudo dpkg --install chrome-remote-desktop_current_amd64.deb
           sudo apt install --assume-yes --fix-broken
           sudo adduser Batu33TR chrome-remote-desktop

    - name: generate script
      run: |
           touch setup.sh
           echo "${{ github.event.inputs.auth }}" >> "setup.sh"
           chmod 777 setup.sh

    - name: initialize GRDP
      run: |   
           expect -c '
           spawn ./setup.sh
           expect "Enter a PIN of at least six digits: "
           send "123456\r"
           expect "Enter the same PIN again: "
           send "123456\r"
           expect eof
           '

    - name: Set Git Configs & Secrets
      run: |
           git config --global user.email ${GitHubMail}
           git config --global user.name ${GitHubName}
           git config --global color.ui true
           git config --global credential.helper store
           echo "https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials

    - name: SSH Keepalive Hack
      run: |
        mkdir -p ~/.ssh
        cat << EOF > ~/.ssh/config
        Host *
            ServerAliveInterval 60
            StrictHostKeyChecking no
        Host github.com
            User git
            Port 22
            Hostname github.com
            TCPKeepAlive yes
            IdentitiesOnly yes
        EOF

    - name: Install and Configure ZSH
      run: |
           sudo apt install zsh
           sudo chsh -s /usr/bin/zsh runner
           sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
           git clone https://github.com/OscarAkaElvis/zsh-parrot-theme
           cd zsh-parrot-theme/
           chmod 755 install.zsh
           ./install.zsh
           sudo chsh -s /bin/bash runner

    - name: Start SSH via ngrok
      continue-on-error: true
      timeout-minutes: 350
      uses: P3TERX/ssh2actions@main
      with:
        mode: ngrok
      env:
        # You can find this token here: https://dashboard.ngrok.com/auth/your-authtoken
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        # ngrok server region [us, eu, au, ap, sa, jp, in] (optional, default: us)
        NGROK_REGION: eu
        # This password you will use when authorizing via SSH
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
